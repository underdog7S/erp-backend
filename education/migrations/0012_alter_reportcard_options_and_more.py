# Generated by Django 5.2.4 on 2025-10-29 18:44

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0019_alert'),
        ('education', '0011_update_student_timestamps'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='reportcard',
            options={'ordering': ['-academic_year', '-term', 'student']},
        ),
        migrations.AddField(
            model_name='feepayment',
            name='split_installments',
            field=models.JSONField(blank=True, default=dict, help_text='If payment covers multiple installments: {installment_id: amount}'),
        ),
        migrations.AddField(
            model_name='feestructure',
            name='installments_enabled',
            field=models.BooleanField(default=False, help_text='Enable installment payments for this fee'),
        ),
        migrations.AddField(
            model_name='reportcard',
            name='attendance_percentage',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=5),
        ),
        migrations.AddField(
            model_name='reportcard',
            name='class_obj',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='report_cards', to='education.class'),
        ),
        migrations.AddField(
            model_name='reportcard',
            name='conduct_grade',
            field=models.CharField(blank=True, help_text='A+, A, B+, etc.', max_length=10),
        ),
        migrations.AddField(
            model_name='reportcard',
            name='days_absent',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='reportcard',
            name='days_present',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='reportcard',
            name='grade',
            field=models.CharField(blank=True, max_length=10),
        ),
        migrations.AddField(
            model_name='reportcard',
            name='issued_date',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='reportcard',
            name='max_total_marks',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=10),
        ),
        migrations.AddField(
            model_name='reportcard',
            name='old_grades',
            field=models.TextField(blank=True, help_text='Legacy grades JSON/CSV'),
        ),
        migrations.AddField(
            model_name='reportcard',
            name='old_term',
            field=models.CharField(blank=True, help_text='Legacy term field', max_length=50),
        ),
        migrations.AddField(
            model_name='reportcard',
            name='percentage',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=5),
        ),
        migrations.AddField(
            model_name='reportcard',
            name='principal_remarks',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='reportcard',
            name='rank_in_class',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='reportcard',
            name='teacher_remarks',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='reportcard',
            name='total_marks',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=10),
        ),
        migrations.AddField(
            model_name='reportcard',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='reportcard',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='report_cards', to='education.student'),
        ),
        migrations.CreateModel(
            name='AcademicYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='e.g., 2024-25', max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_current', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.tenant')),
            ],
            options={
                'ordering': ['-start_date'],
                'unique_together': {('tenant', 'name')},
            },
        ),
        migrations.AddField(
            model_name='reportcard',
            name='academic_year',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='report_cards', to='education.academicyear'),
        ),
        migrations.CreateModel(
            name='AssessmentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='e.g., UT1, PT1, Half-Yearly, Annual, Practical', max_length=50)),
                ('code', models.CharField(blank=True, help_text='Short code (e.g., UT1)', max_length=20)),
                ('max_marks', models.DecimalField(decimal_places=2, default=100, max_digits=10)),
                ('weightage', models.DecimalField(decimal_places=2, default=100, help_text='Weightage percentage (e.g., 30 for 30%)', max_digits=5)),
                ('order', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.tenant')),
            ],
            options={
                'ordering': ['order', 'name'],
                'unique_together': {('tenant', 'name')},
            },
        ),
        migrations.CreateModel(
            name='FeeInstallment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('installment_number', models.IntegerField(help_text='Installment number (1, 2, 3...)')),
                ('due_amount', models.DecimalField(decimal_places=2, help_text='Amount due for this installment', max_digits=10)),
                ('paid_amount', models.DecimalField(decimal_places=2, default=0, help_text='Amount paid so far', max_digits=10)),
                ('due_date', models.DateField(help_text='Due date for payment')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('PARTIAL', 'Partially Paid'), ('PAID', 'Paid'), ('OVERDUE', 'Overdue')], default='PENDING', max_length=20)),
                ('late_fee', models.DecimalField(decimal_places=2, default=0, help_text='Late fee charged if overdue', max_digits=10)),
                ('payment_date', models.DateField(blank=True, help_text='Date when fully paid', null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('fee_structure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='installments', to='education.feestructure')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fee_installments', to='education.student')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.tenant')),
            ],
            options={
                'ordering': ['fee_structure', 'installment_number'],
            },
        ),
        migrations.AddField(
            model_name='feepayment',
            name='installment',
            field=models.ForeignKey(blank=True, help_text='If payment is for specific installment', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payments', to='education.feeinstallment'),
        ),
        migrations.CreateModel(
            name='FeeInstallmentPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="e.g., '4 Monthly Installments', 'Quarterly Plan'", max_length=100)),
                ('number_of_installments', models.IntegerField(help_text='Total number of installments')),
                ('installment_type', models.CharField(choices=[('EQUAL', 'Equal Amounts'), ('CUSTOM', 'Custom Amounts'), ('PERCENTAGE', 'Percentage Based')], default='EQUAL', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('fee_structure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='installment_plans', to='education.feestructure')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.tenant')),
            ],
            options={
                'unique_together': {('tenant', 'fee_structure')},
            },
        ),
        migrations.AddField(
            model_name='feeinstallment',
            name='installment_plan',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='education.feeinstallmentplan'),
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='e.g., Mathematics, Science, English', max_length=100)),
                ('code', models.CharField(blank=True, help_text='Subject code (e.g., MATH101)', max_length=20)),
                ('max_marks', models.DecimalField(decimal_places=2, default=100, help_text='Maximum marks for this subject', max_digits=10)),
                ('has_practical', models.BooleanField(default=False, help_text='Has practical component')),
                ('practical_max_marks', models.DecimalField(decimal_places=2, default=0, help_text='Maximum practical marks', max_digits=10)),
                ('order', models.IntegerField(default=0, help_text='Display order')),
                ('is_active', models.BooleanField(default=True)),
                ('class_obj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subjects', to='education.class')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.tenant')),
            ],
            options={
                'ordering': ['order', 'name'],
                'unique_together': {('tenant', 'class_obj', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='e.g., Term 1, Semester 1, Q1', max_length=50)),
                ('order', models.IntegerField(help_text='Display order (1, 2, 3...)')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='terms', to='education.academicyear')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.tenant')),
            ],
            options={
                'ordering': ['academic_year', 'order'],
                'unique_together': {('tenant', 'academic_year', 'name')},
            },
        ),
        migrations.AlterField(
            model_name='reportcard',
            name='term',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='report_cards', to='education.term'),
        ),
        migrations.AlterUniqueTogether(
            name='reportcard',
            unique_together={('tenant', 'student', 'academic_year', 'term')},
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='e.g., Unit 1: Algebra, Chapter 1: Sets', max_length=200)),
                ('number', models.IntegerField(help_text='Unit number (1, 2, 3...)')),
                ('description', models.TextField(blank=True)),
                ('order', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='units', to='education.subject')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.tenant')),
            ],
            options={
                'ordering': ['subject', 'number'],
                'unique_together': {('tenant', 'subject', 'number')},
            },
        ),
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='e.g., Mathematics UT1, Science Half-Yearly', max_length=200)),
                ('date', models.DateField(help_text='Assessment date')),
                ('max_marks', models.DecimalField(decimal_places=2, max_digits=10)),
                ('passing_marks', models.DecimalField(decimal_places=2, default=40, max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.tenant')),
                ('assessment_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='assessments', to='education.assessmenttype')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessments', to='education.subject')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessments', to='education.term')),
                ('unit', models.ForeignKey(blank=True, help_text='Optional: if assessment is unit-specific', null=True, on_delete=django.db.models.deletion.SET_NULL, to='education.unit')),
            ],
            options={
                'ordering': ['term', 'subject', 'date'],
                'unique_together': {('tenant', 'subject', 'term', 'assessment_type')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='feeinstallment',
            unique_together={('tenant', 'student', 'fee_structure', 'installment_number')},
        ),
        migrations.CreateModel(
            name='MarksEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marks_obtained', models.DecimalField(decimal_places=2, max_digits=10)),
                ('max_marks', models.DecimalField(decimal_places=2, help_text='Max marks for this specific assessment', max_digits=10)),
                ('remarks', models.TextField(blank=True, help_text='Teacher remarks')),
                ('entered_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='marks_entries', to='education.assessment')),
                ('entered_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.userprofile')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='marks_entries', to='education.student')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.tenant')),
            ],
            options={
                'ordering': ['-entered_at'],
                'unique_together': {('tenant', 'student', 'assessment')},
            },
        ),
        migrations.RemoveField(
            model_name='reportcard',
            name='grades',
        ),
    ]
