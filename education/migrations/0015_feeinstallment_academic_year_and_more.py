# Generated by Django 5.2.4 on 2025-10-31 10:04

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0019_alert'),
        ('education', '0014_add_student_cast_religion'),
    ]

    operations = [
        migrations.AddField(
            model_name='feeinstallment',
            name='academic_year',
            field=models.CharField(blank=True, help_text='Academic year for this installment', max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='feepayment',
            name='academic_year',
            field=models.CharField(blank=True, help_text='Academic year for this payment', max_length=20, null=True),
        ),
        migrations.CreateModel(
            name='BalanceAdjustment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adjustment_type', models.CharField(choices=[('WAIVER', 'Fee Waiver'), ('DISCOUNT', 'Discount Applied'), ('CORRECTION', 'Correction/Adjustment'), ('REFUND', 'Refund'), ('LATE_FEE_WAIVER', 'Late Fee Waiver'), ('OTHER', 'Other')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Positive for reduction, negative for addition', max_digits=10)),
                ('reason', models.TextField(help_text='Reason for adjustment')),
                ('academic_year', models.CharField(blank=True, max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_adjustments', to='api.userprofile')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_adjustments', to='api.userprofile')),
                ('fee_structure', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='education.feestructure')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='balance_adjustments', to='education.student')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.tenant')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OldBalance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('academic_year', models.CharField(help_text='Previous academic year (e.g., 2023-24)', max_length=20)),
                ('class_name', models.CharField(help_text='Class name when balance was recorded', max_length=100)),
                ('balance_amount', models.DecimalField(decimal_places=2, help_text='Outstanding balance from previous year', max_digits=10)),
                ('carried_forward_to', models.CharField(blank=True, help_text='New academic year this balance was carried to', max_length=20, null=True)),
                ('is_settled', models.BooleanField(default=False, help_text='Whether this old balance has been cleared')),
                ('settled_date', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, help_text='Notes about this balance')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('settlement_payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='settled_old_balances', to='education.feepayment')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='old_balances', to='education.student')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.tenant')),
            ],
            options={
                'ordering': ['-academic_year', 'student'],
                'unique_together': {('tenant', 'student', 'academic_year')},
            },
        ),
    ]
